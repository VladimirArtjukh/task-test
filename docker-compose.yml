version: '3.8'
services:
  nginx:
    build:
      context: docker/nginx
    volumes:
      - ./src:/www
    container_name: "d_nginx-${NUMBER_PROJECT}"
    restart: always
    ports:
      - "${NGINX_PORT}:81"
    networks:
      - myProject
    depends_on:
      - mysql
      - php-fpm

  php-fpm:
    build:
      context: "docker/php/${PHP_VERSION}"
    restart: always
    container_name: "php-${NUMBER_PROJECT}"
    networks:
      - myProject
    volumes:
      - ./src:/www
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      PHP_IDE_CONFIG: serverName=Docker

  mysql:
    container_name: "mysql-${NUMBER_PROJECT}"
    image: mysql:8.0
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - ./database/mysql/logs:/var/log/mysql
      - ./database/mysql/storage/mysql:/var/lib/mysql
    env_file:
      - .env
    networks:
      - myProject

  phpmyadmin:
    container_name: "phpmyadmin-${NUMBER_PROJECT}"
    image: phpmyadmin/phpmyadmin:5
    ports:
      - "${PMA_PORT}:80"
    volumes:
      - /sessions
    depends_on:
      - "mysql"
    environment:
      PMA_HOST: mysql
    networks:
      - myProject

  composer:
    container_name: "composer-${NUMBER_PROJECT}"
    build:
      context: docker/composer_php
    volumes:
      - ./src:/www
    networks:
      - myProject

  artisan:
    container_name: "artisan-${NUMBER_PROJECT}"
    build:
      context: "docker/php/${PHP_VERSION}"
    volumes:
      - ./src:/www
    entrypoint: ["php", "/www/artisan"]
    networks:
      - myProject

  npm:
    container_name: "npm-${NUMBER_PROJECT}"
    image: node:${NODE_VERSION}
    working_dir: "/www"
    entrypoint: [ "npm" ]
    volumes:
      - "./src:/www"
    networks:
      - myProject

networks:
  myProject:
    driver: bridge

